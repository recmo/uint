name: CI

on:
    push:
        branches: [main]
    pull_request:

env:
    CARGO_TERM_COLOR: always

jobs:
    test:
        name: test ${{ matrix.rust }}
        runs-on: ubuntu-latest
        timeout-minutes: 30
        strategy:
            fail-fast: false
            matrix:
                rust: [stable, beta, nightly, 1.65] # MSRV
        steps:
            - uses: actions/checkout@v3
            - uses: dtolnay/rust-toolchain@master
              with:
                  toolchain: ${{ matrix.rust }}
            - name: exclude nightly features
              if: ${{ matrix.rust }} != 'nightly'
              run: |
                  sed -i 's/nightly = \[\]//g' crates/ruint/Cargo.toml
                  sed -i 's/generic_const_exprs = \["nightly"\]//g' crates/ruint/Cargo.toml
            - uses: Swatinem/rust-cache@v2
            - name: test
              run: cargo test --workspace --all-features

    feature-checks:
        name: feature checks
        runs-on: ubuntu-latest
        timeout-minutes: 30
        steps:
            - uses: actions/checkout@v3
            - uses: dtolnay/rust-toolchain@stable
            - uses: taiki-e/install-action@cargo-hack
            - uses: Swatinem/rust-cache@v2
            - name: cargo hack
              run: |
                  cargo hack check \
                  --feature-powerset --exclude-features nightly,generic_const_exprs \
                  --depth 1 \
                  --all-targets

    # codecov:
    #     # See <https://doc.rust-lang.org/nightly/unstable-book/compiler-flags/source-based-code-coverage.html>
    #     name: Coverage
    #     runs-on: ubuntu-latest
    #     timeout-minutes: 30
    #     steps:
    #         - name: Checkout repository
    #           uses: actions/checkout@v3
    #         - name: Install rust
    #           uses: dtolnay/rust-toolchain@master
    #           with:
    #               toolchain: nightly
    #               components: llvm-tools-preview
    #         - name: Cache build
    #           uses: Swatinem/rust-cache@v1
    #           with:
    #               key: cache-v1
    #         - name: Install cargo-llvm-cov
    #           uses: taiki-e/install-action@cargo-llvm-cov
    #         - name: Build with code coverage
    #           run: |
    #               cargo llvm-cov --no-report --locked --workspace --all-features --all-targets -- --help
    #               cargo llvm-cov --no-report --locked --workspace --all-features --doc -- --help
    #         - name: Generate code coverage
    #           env:
    #               # Covered tests are slower, so reduce the test load. (We also shouldn't
    #               # depend too much on case generation for coverage).
    #               PROPTEST_CASES: 5
    #           run: |
    #               # Generate profiles, but do not merge them
    #               cargo llvm-cov --no-report --locked --workspace --all-features --all-targets -- --nocapture
    #               cargo llvm-cov --no-report --locked --workspace --all-features --doc -- --nocapture
    #         - name: Merge profiles
    #           run: cargo llvm-cov --no-run --lcov --output-path lcov.info
    #         - name: Submit to codecov.io
    #           uses: codecov/codecov-action@v3.1.1
    #           with:
    #               token: ${{ secrets.CODECOV_TOKEN }} # Optional for public repos
    #               files: lcov.info
    #               fail_ci_if_error: true
    #               verbose: true

    clippy:
        name: clippy
        runs-on: ubuntu-latest
        timeout-minutes: 30
        steps:
            - uses: actions/checkout@v3
            - uses: dtolnay/rust-toolchain@clippy
            - run: cargo clippy --workspace --all-features
              env:
                  RUSTFLAGS: -Dwarnings

    docs:
        name: docs
        runs-on: ubuntu-latest
        timeout-minutes: 30
        steps:
            - uses: actions/checkout@v3
            - uses: dtolnay/rust-toolchain@nightly
              with:
                  components: rust-docs
            - run: cargo doc --workspace --all-features --no-deps --document-private-items
              env:
                  RUSTDOCFLAGS: "--cfg doc_cfg -D warnings"

    fmt:
        name: fmt
        runs-on: ubuntu-latest
        timeout-minutes: 30
        steps:
            - uses: actions/checkout@v3
            - uses: dtolnay/rust-toolchain@nightly
              with:
                  components: rustfmt
            - run: cargo fmt --all --check
